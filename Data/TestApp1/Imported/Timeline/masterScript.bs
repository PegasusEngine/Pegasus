//define master script for Frame.bsh
#define MASTERSCRIPT_DEFINED 1
#ifndef MAX_WINDOW_COUNT
#define MAX_WINDOW_COUNT 1
#endif 

#include "RenderSystems/Frame/Frame.bsh"

@(EditorType=EDITOR_TYPE_CHECKBOX)
extern EnableTerrain = 0;
extern CamPos = float3(0.0,1.0,0.0);
extern Fov = 0.5;
extern CamDir = float3(0.0,0.0,-1.0);
extern NearPlane = 0.05;


gWorldCam = CreateCamera();
gWorldCam.Far = 1000.0;
gWorldCam.EnableOrtho = 0;
terrainShader = LoadProgram("Programs/MarchingCubeProgram.pas");
3dTerrain = CreateTerrain3d(15,15);
3dTerrain.BlockHeight = 1;
3dTerrain.BlockLod0Threshold = 4;
3dTerrain.BlockLod1Threshold = 16;
3dTerrain.BlockLod2Threshold = 16;
3dTerrain.Visible = 1;

defaultRasterState = CreateRasterizerState(RasterizerConfig(CW_CM,LESSER_EQUAL_DF));
hackedCCWMode = CreateRasterizerState(RasterizerConfig(CCW_CM,LESSER_EQUAL_DF));

int Timeline_Update(info : UpdateInfo)
{
	3dTerrain->SetCullCamera(gWorldCam);
	gWorldCam.Position = CamPos + info.beat*float3(0.5,0.0,0.5);
	gWorldCam.Dir = CamDir;
	gWorldCam.Fov = Fov;
	gWorldCam.Near = NearPlane;
	BindCamera(gWorldCam, CAM_WORLD_CONTEXT);
}

int Timeline_Render(info: RenderInfo)
{
	viewState = GetViewState(info.windowId);
	SetClearColorValue(float4(0.0,0.0,0.0,0.0));
	SetDepthClearValue(1.0);
	SetRasterizerState(defaultRasterState);
	//clear depth stencil
	SetRenderTarget(viewState.ldrSurface,viewState.depthSurface);
	Clear(1,1,1);
	UnbindRenderTargets();
	SetDefaultRenderTarget();

	//SetRasterizerState(hackedCCWMode);
	if (EnableTerrain)
	{
		SetRasterizerState(hackedCCWMode);
		SetDefaultRenderTarget();
		3dTerrain->Generate();	
		SetProgram(terrainShader);
		3dTerrain->Draw();
	}

	//* Some demo ideas!!!
	//* Create a kickass sky / sun with directional.
	//* Add pyramid with normal map generated procedurally
	//* 3d empty Terrain
	//* add hdr pipeline


}
