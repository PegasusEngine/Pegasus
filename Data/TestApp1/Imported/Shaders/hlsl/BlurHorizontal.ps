//
// BlurVertical ps, by Kleber Garcia 2014
//

Texture2D inputTexture;

SamplerState S
{
	MipFilter = LINEAR;
    MinFilter = LINEAR;
    MagFilter = LINEAR;
};

static const float2 sampleDim = float2(1.0/960.0,1.0/540.0);
static const float2 dims = float2(960.0,540.0);


#define SAMPLE_RADIUS 16.0
#define SAMPLE_COUNT (SAMPLE_RADIUS*2 + 1)

float filter(float i)
{
	return exp(-i*0.019);
}
float3 lowPass(float3 inp)
{
	float lum = dot(float3(0.2126,0.7152,0.0722),inp);
	return pow(inp*(1 + lum*lum*lum),2.0);
}
void main(float4 p : POSITION0, out float4 color : SV_Target)
{
	float2 uv = p.xy * 0.5 + 0.5;
	float3 col = float3(0,0,0);
	float acc = 0;

	for (int i = 0; i < SAMPLE_COUNT; ++i)
	{
		float sample = float(i - SAMPLE_RADIUS);
		float f = filter(abs(sample/float(SAMPLE_RADIUS)));

		col += lowPass(
			inputTexture.Sample(S,float2(uv.x + sampleDim.x*sample,uv.y) ).rgb
			)*f;
		acc += f;

	}
    color = float4(col / acc ,1);
} 
