// Declaration of state data
struct ViewState
{
	//Deferred render resources
	gbuffer0		    : RenderTarget; //colorR,colorG,colorB,smoothness
	gbuffer1		    : RenderTarget; //normalX,normalY,normalZ,(reflectance|metalMask)

	//Final lighting resources
	
    hdrSurface          : RenderTarget;
    ldrSurface          : RenderTarget;
    depthSurface        : DepthStencil;
};

struct FrameState
{
    
};

#include "RenderSystems/Frame/Core.bsh"

#ifdef MASTERSCRIPT_DEFINED

ViewState CreateViewState(windowId : int)
{
	w = GetFrameWidth();
	h = GetFrameHeight();
    newViewState = ViewState();

    //hdr frame buffer
    newViewState.hdrSurface       = CreateRenderTarget(RenderTargetConfig(w, h, FORMAT_RGBA_16_FLOAT));
    GlobalRegisterRenderTarget("hdrSurface", windowId, newViewState.hdrSurface);

    //depth buffer
    newViewState.depthSurface = CreateDepthStencil(DepthStencilConfig(w, h, 1));
    GlobalRegisterDepthStencil("depthSurface", windowId, newViewState.depthSurface);

    //ldr frame buffer
    newViewState.ldrSurface       = CreateRenderTarget(RenderTargetConfig(w, h, FORMAT_RGBA_8_UNORM));
    GlobalRegisterRenderTarget("ldrSurface", windowId, newViewState.ldrSurface);

	newViewState.gbuffer0 = CreateRenderTarget(RenderTargetConfig(w,h,FORMAT_RGBA_8_UNORM));
    GlobalRegisterRenderTarget("gbuffer0", windowId, newViewState.gbuffer0);

	newViewState.gbuffer1 = CreateRenderTarget(RenderTargetConfig(w,h,FORMAT_RGBA_16_FLOAT));
    GlobalRegisterRenderTarget("gbuffer1", windowId, newViewState.gbuffer1);

    return newViewState;
}
#else
ViewState ReadViewState(windowId : int)
{
    newViewState = ViewState();

    //hdr frame buffer
    newViewState.hdrSurface  = GlobalFindRenderTarget("hdrSurface", windowId);

    //depth buffer
    newViewState.depthSurface = GlobalFindDepthStencilTarget("depthSurface", windowId);

    //ldr frame buffer
    newViewState.ldrSurface = GlobalFindRenderTarget("ldrSurface", windowId);

	//deferred resources
	newViewState.gbuffer0 = GlobalFindRenderTarget("gbuffer0", windowId);

	newViewState.gbuffer1 =  GlobalFindRenderTarget("gbuffer1", windowId);

	return newViewState;
}
#endif

#ifdef MASTERSCRIPT_DEFINED
FrameState CreateFrameState()
{
    newFrameState = FrameState();
    return newFrameState;
}
#else
FrameState ReadFrameState()
{
    newFrameState = FrameState();
    return newFrameState;
}
#endif
